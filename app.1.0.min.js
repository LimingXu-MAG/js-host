$(function () { function e() { $.ajax({ url: $("#statistics-box").data("url"), dataType: "json", success: function (e) { $("#num-producers").html(e.num_producers), $("#num-products").html(e.num_producers), $("#num-transactions").html(e.num_producers) } }) } $(".alert").delay(4e3).slideUp(200, function () { $(this).alert("close") }), e(), setInterval(function () { e() }, 5e3), web3 = new Web3; function t(e, t) { var n = new web3.eth.Contract(e, t); return n.setProvider(web3.currentProvider), n } window.onload = (async () => !!window.ethereum && (await window.ethereum.send("eth_requestAccounts"), window.web3 = new Web3(window.ethereum), !0))(), $("#btn-download-qrcode").click(function () { download($("#qrcode").attr("src"), "qrcode.png", "image/png") }); let n = new Instascan.Scanner({ video: document.getElementById("preview") }); function a() { return new Date($.now()).getTime() } n.addListener("scan", function (e) { var t = e.split(":")[1]; $("#input-token-id").val(t), $("#qr-reader").modal("hide"), n.stop(), $("#token-id-detected").text(t), $("#scan-success-modal").modal("show") }), $("#btn-scan").click(function () { Instascan.Camera.getCameras().then(e => { e.length > 0 ? n.start(e[0]) : console.error("Please enable Camera!") }) }), $("#btn-stop-scanning").click(function () { n.stop() }), $("#search-form").submit(function (e) { var t = $("#input-token-id").val(), n = $("#search-form").attr("action"); $("#search-form").attr("action", n.replace("0", t)) }), $("#btn-confirm").click(function () { $("#search-form").submit() }), $("#input-product-id").keyup(function () { $(this).val().length > 0 ? $.ajax({ url: $(this).data("url"), data: { product_id: $(this).val() }, dataType: "json", success: function (e) { e.is_existed ? ($("#token_id_not_exist_message").removeClass("d-block"), $("#token_id_not_exist_message").addClass("d-none")) : ($("#token_id_not_exist_message").removeClass("d-none"), $("#token_id_not_exist_message").addClass("d-block")) } }) : $("#validation_message").addClass("d-none") }), $("#input-recipient-id").keyup(function () { $(this).val().length > 0 ? $.ajax({ url: $(this).data("url"), data: { recipient_id: $(this).val() }, dataType: "json", success: function (e) { e.is_existed ? ($("#recipient_id_not_exist_message").removeClass("d-block"), $("#recipient_id_not_exist_message").addClass("d-none"), $("#input-recipient-addr").val(e.recipient_addr)) : ($("#recipient_id_not_exist_message").removeClass("d-none"), $("#recipient_id_not_exist_message").addClass("d-block")) } }) : $("#validation_message").addClass("d-none") }), $("#add-product-form").one("submit", function (e) { e.preventDefault() }), $("#btn-add-product").click(async () => { var e = $("#id_token_id").val(), n = t(abi, "0xdD60C54579dc16D94394eE6eCB294c14231D81B1"); n.setProvider(web3.currentProvider); var s = (await web3.eth.requestAccounts().then())[0]; n.methods.mint(s, e).send({ from: s }, function (e, t) { e ? alert("Something wrong when submitting your transactions!") : (console.log("NFT token creation success, hash:" + t), $("#id_tx_hash").val(t), $("#id_submitted_at").val(a()), $("#add-product-form").submit()) }) }), $("#add-trace-form").on("submit", function (e) { e.preventDefault() }), $("#btn-save-trace").click(async () => { var e = $("#input-token-id").val(), n = $("#input-latitude").val(), s = $("#input-longitude").val(), i = $("#select-action").val(), o = $("#input-description").val(), r = t(abi, "0xdD60C54579dc16D94394eE6eCB294c14231D81B1"); r.setProvider(web3.currentProvider); var c = (await web3.eth.requestAccounts().then())[0], d = a(), u = [d, n, s, i].join("@"); console.log("Data submitted to blockchain: " + u), alert(u), r.methods.push2chain(c, c, e, u).send({ from: c }, function (t, n) { t ? alert("Something wrong when submitting your transactions!") : (console.log("Save success: " + n), $("#modal-add-trace").modal("hide"), $.ajax({ type: "post", url: $("#add-trace-form").attr("action"), data: { submitted_at: d, token_id: e, tx_hash: n, description: o }, dataType: "json", success: function (e) { e.is_save_success && alert("Trace saved success!") } })) }) }), $("#token-transfer-form").on("submit", function (e) { e.preventDefault() }), $("#btn-transfer-confirm").click(async () => { var e = $("#input-token-id-transfer").val(), n = $("#input-latitude-transfer").val(), a = $("#input-longitude-transfer").val(), s = $("#input-recipient-id").val(), i = $("#input-recipient-addr").val(), o = $("#input-description-transfer").val(), r = t(abi, "0xdD60C54579dc16D94394eE6eCB294c14231D81B1"); r.setProvider(web3.currentProvider); var c = (await web3.eth.requestAccounts().then())[0], d = new Date($.now()).getTime(), u = [d, n, a, "transfer"].join("@"); console.log("Data submitted to blockchain: " + u), alert(u), r.methods.push2chain(c, i, e, u).send({ from: c }, function (t, n) { t ? alert("Something wrong when submitting your transactions!") : (console.log("Transfer success: " + n), $("#modal-token-transfer").modal("hide"), $.ajax({ type: "post", url: $("#token-transfer-form").attr("action"), data: { submitted_at: d, token_id: e, tx_hash: n, recipient_id: s, description: o }, dataType: "json", success: function (e) { e.is_transfer_success && alert("Transfer success!") } })) }) }) });
